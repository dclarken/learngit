'''
请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，
当从字符流中只读出前两个字符"go"时，第一个只出现一次的字符是"g"。
当从该字符流中读出前六个字符“google"时，第一个只出现一次的字符是"l"。
输出：
如果当前字符流没有存在出现一次的字符，返回#字符。
思路：
定义一个结构体，记录输出的字符和字符出现的次数，
insert函数将字符串输入到结构体中，对于重复的字符，记数加1
FirstAppearingOnce判断第一个的字符
'''
# -*- coding:utf-8 -*-    
def __init__(self):
    self.chars = []
    self.counts = []
def FirstAppearingOnce(self):
    counter = 0
    while counter<len(self.counts):
        if self.counts[counter]==1:
            return self.chars[counter]
        counter += 1
    return "#"        
def Insert(self, char):
    if char in self.chars:
       self.counts[self.chars.index(char)] += 1
    else:
        self.chars.append(char)
        self.counts.append(1)
